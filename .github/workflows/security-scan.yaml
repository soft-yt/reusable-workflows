name: Security Scan (Reusable)

on:
  workflow_call:
    inputs:
      go-version:
        description: 'Go version to use'
        required: false
        type: string
        default: '1.24'
      working-directory:
        description: 'Working directory'
        required: false
        type: string
        default: '.'
      scan-go:
        description: 'Run Go security scans'
        required: false
        type: boolean
        default: true
      scan-docker:
        description: 'Scan Docker images'
        required: false
        type: boolean
        default: false
      docker-image:
        description: 'Docker image to scan'
        required: false
        type: string
        default: ''

permissions:
  contents: read
  security-events: write

jobs:
  gosec:
    name: Go Security Scan
    if: ${{ inputs.scan-go }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}
          cache: true

      - name: Run gosec security scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt sarif -out gosec.sarif ./...'

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec.sarif

  trivy-fs:
    name: Trivy Filesystem Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner (filesystem)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: ${{ inputs.working-directory }}
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-fs-results.sarif'

  trivy-docker:
    name: Trivy Docker Image Scan
    if: ${{ inputs.scan-docker && inputs.docker-image != '' }}
    runs-on: ubuntu-latest

    steps:
      - name: Run Trivy vulnerability scanner (Docker image)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: ${{ inputs.docker-image }}
          format: 'sarif'
          output: 'trivy-docker-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-docker-results.sarif'

  dependency-review:
    name: Dependency Review
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
