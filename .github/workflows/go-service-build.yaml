name: Go Service Build and Deploy

on:
  workflow_call:
    inputs:
      go-version:
        description: 'Go version to use'
        required: false
        type: string
        default: '1.21'
      service-name:
        description: 'Service name (used for ArgoCD)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: Run tests
        run: go test -v ./...

      - name: Run go vet
        run: go vet ./...

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deployment notification
        run: |
          echo "‚úÖ Docker image pushed successfully!"
          echo "üì¶ Images pushed:"
          echo "  - ${{ env.REGISTRY }}/${{ github.repository }}:latest"
          echo "  - ${{ env.REGISTRY }}/${{ github.repository }}:main-${GITHUB_SHA:0:7}"
          echo ""
          echo "üöÄ ArgoCD will automatically sync the application"
          echo "üîó Check deployment: https://argo.dev.tulupov.org/applications/${{ inputs.service-name }}"
          echo ""
          echo "‚ÑπÔ∏è Using 'latest' tag for deployments. For version pinning, configure ArgoCD Image Updater."
